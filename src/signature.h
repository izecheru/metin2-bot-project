#pragma once
#include <Windows.h>

struct OffsetSig
{
		const char* pattern = nullptr;
		const char* mask = nullptr;
		BYTE        offset = 0;

		OffsetSig(const char* p, const char* m, const BYTE off)
		{
				pattern = p;
				mask = m;
				offset = off;
		}
};

struct Sig
{
		const char* pattern;
		const char* mask;

		Sig(const char* p, const char* m)
		{
				pattern = p;
				mask = m;
		}
};

namespace Elaris
{
		inline auto SendShopSellPacket =
				Sig("\x55\x8B\xEC\x51\x56\x8B\xF1\xE8\x00\x00\x00\x00\x84\xC0\x75\x00\xB0\x00\x5E\x8B\xE5\x5D\xC2\x00\x00\x8D\x45\x00\x66\xC7\x45\x00\x00\x00\x50\x6A\x00\x8B\xCE\xE8\x00\x00\x00\x00\x84\xC0\x75\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x00\x32\xC0\x5E\x8B\xE5\x5D\xC2\x00\x00\x8D\x45\x00\x8B\xCE\x50\x6A\x00\xE8\x00\x00\x00\x00\x84\xC0\x75\x00\x68\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x00\x32\xC0\x5E\x8B\xE5\x5D\xC2\x00\x00\x8B\xCE\xE8\x00\x00\x00\x00\x5E\x8B\xE5\x5D\xC2\x00\x00\xCC\xCC\xCC\xCC\xCC\x55\x8B\xEC\x51"
						, "xxxxxxxx????xxx?x?xxxxx??xx?xxx???xx?xxx????xxx?x????x????xx?xxxxxxx??xx?xxxx?x????xxx?x????x????xx?xxxxxxx??xxx????xxxxx??xxxxxxxxx");


		inline auto PatchMetinAutofarm = Sig("\x83\xF8\x00\x72\x00\x8B\x35", "xx?x?xx");
		inline auto CPyhtonMiniMap = OffsetSig("\x8B\x0D\x00\x00\x00\x00\x8B\x3D\x00\x00\x00\x00\x75",
																					 "xx????xx????x", 0x2);
		inline auto CPyhtonBackground = OffsetSig("\x8B\x3D\x00\x00\x00\x00\x75", "xx????x", 0x2);
		inline auto CInstanceBase = OffsetSig("\x8B\xCF\xE8\x00\x00\x00\x00\x85\xC0\x75\x00\x68",
																					"xxx????xxx?x", 0x2);
		inline auto CPythonPlayer = OffsetSig(
				"\x8B\x0D\x00\x00\x00\x00\x6A\x00\x68\x00\x00\x00\x00\x6A\x00\xE8",
				"xx????x?x????x?x", 0x2);
		inline auto CItemManager = OffsetSig(
				"\x8B\x0D\x00\x00\x00\x00\x50\xE8\x00\x00\x00\x00\x85\xC0\x74\x00\x56",
				"xx????xx????xxx?x", 0x2);
		inline auto CPythonItem = OffsetSig("\x8B\x35\x00\x00\x00\x00\x8D\x45\x00\x57\x8B\x7D", "xx????xx?xxx",
																				0x2);
		inline auto CFlyingManager = OffsetSig("\x8B\x3D\x00\x00\x00\x00\xA1\x00\x00\x00\x00\xF3\x0F\x10\x05",
																					 "xx????x????xxxx", 0x2);
		inline auto CRaceManager = OffsetSig(
				"\x8B\x0D\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x8B\xF8\x85\xFF\x75\x00\x32\xC0",
				"xx????x????xxxxx?xx", 0x2);
		inline auto CPyhtonCharacterManager = OffsetSig("\x8B\x3D\x00\x00\x00\x00\x8B\x47\x00\x8D\x4F",
																										"xx????xx?xx", 0x2);
		inline auto CPythonNetworkStream = OffsetSig(
				"\x8B\x0D\x00\x00\x00\x00\xE8\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x5E\x8B\xE5\x5D\xC3\xCC\xCC\xCC\x55\x8B\xEC\x51",
				"xx????x????x????xxxxxxxxxxxx", 0x2);

		// function signatures
		inline const auto SendPacket = Sig("\x55\x8B\xEC\x56\x8B\xF1\x57\x8B\x7D\x00\x8B\x56", "xxxxxxxxx?xx");
		inline auto       SendUseSkill = Sig(
				"\x55\x8B\xEC\x83\xEC\x00\xA1\x00\x00\x00\x00\x33\xC5\x89\x45\x00\x8B\x45\x00\x89\x45\x00\x8B\x45\x00\x56",
				"xxxxx?x????xxxx?xx?xx?xx?x");
		inline auto CanUseSkill = Sig(
				"\xE8\x00\x00\x00\x00\x84\xC0\x74\x00\xE8\x00\x00\x00\x00\x83\xF8\x00\x0F\x97\xC0",
				"x????xxx?x????xx?xxx");
		inline auto GetMainInstancePtr = Sig(
				"\x8B\x41\x00\xC3\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\x55\x8B\xEC\x81\xEC",
				"xx?xxxxxxxxxxxxxxxxxx");
		inline auto SetAutoAttackTarget = Sig(
				"\x55\x8B\xEC\x8B\x45\x00\x89\x41\x00\x5D\xC2\x00\x00\xCC\xCC\xCC\x55\x8B\xEC\x83\xEC\x00\x53\x56\x8B\xF1",
				"xxxxx?xx?xx??xxxxxxxx?xxxx");

		inline auto SendItemDropPacket = Sig(
				"\x55\x8B\xEC\x83\xEC\x00\x56\x8B\xF1\xE8\x00\x00\x00\x00\x84\xC0\x75\x00\xB0\x00\x5E\x8B\xE5\x5D\xC2\x00\x00\x66\x8B\x45\x00\x8B\xCE\x66\x89\x45\x00\x8A\x45\x00\x88\x45\x00\x8B\x45\x00\x89\x45\x00\x8D\x45",
				"xxxxx?xxxx????xxx?x?xxxxx??xxx?xxxxx?xx?xx?xx?xx?xx");
		inline auto RecvPacket = Sig(
				"\x55\x8B\xEC\x5D\xE9\x00\x00\x00\x00\xCC\xCC\xCC\xCC\xCC\xCC\xCC\x55\x8B\xEC\x56\x8B\xF1\x57",
				"xxxxx????xxxxxxxxxxxxxx");
		inline auto SendItemUsePacket = Sig(
				"\x55\x8B\xEC\x51\x56\x8B\xF1\xE8\x00\x00\x00\x00\x84\xC0\x74\x00\x66\x8B\x45",
				"xxxxxxxx????xxx?xxx");
};
